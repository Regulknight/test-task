package com.haulmont.testtask.dao;

import java.sql.*;

/**
 * Created by zelh on 18.06.17.
 */
public class DBConnector {
    private static DBConnector dbConnector;
    private Connection c;
    private Statement st;

    public static Connection getInstance(){
        if (dbConnector == null){
            dbConnector = new DBConnector();
        }
        return dbConnector.c;
    }

    private void initDB() throws SQLException {
        st.execute("CREATE TABLE IF NOT EXISTS PUBLIC.GENRE(" +
                "ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY, "+
                "NAME VARCHAR(30) NOT NULL" +
                ")");
        st.execute("CREATE TABLE if NOT EXISTS PUBLIC.AUTHOR(" +
                "ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY, "+
                "FNAME VARCHAR(30) NOT NULL, " +
                "LNAME VARCHAR(30) NOT NULL, " +
                "PATRON VARCHAR(30)" +
                ")");
        st.execute("CREATE TABLE if NOT EXISTS PUBLIC.BOOK(" +
                "ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY, " +
                "NAME VARCHAR(30) NOT NULL, " +
                "BYEAR INTEGER NOT NULL, " +
                "CITY VARCHAR(30) NOT NULL, " +
                "AUTHOR BIGINT NOT NULL, " +
                "GENRE BIGINT NOT NULL, " +
                "PUBLISHER VARCHAR(30) NOT NULL, " +
                "CONSTRAINT FOREIGN_KEY_FOR_AUTHOR FOREIGN KEY(AUTHOR) REFERENCES PUBLIC.AUTHOR(ID), " +
                "CONSTRAINT FOREIGN_KEY_FOR_GENRE FOREIGN KEY(GENRE) REFERENCES PUBLIC.GENRE(ID)" +
                ")");
    }

    private DBConnector(){
        try {
            Class.forName("org.hsqldb.jdbc.JDBCDriver");
            c = DriverManager.getConnection("jdbc:hsqldb:file:testdb", "SA", "");
            st = c.createStatement();
            initDB();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


